---
// NavBar.astro
---
  
<div class="navbar">
	<!-- <a href="#home">Home</a>
	<a href="#about">About</a>
	<a href="#services">Services</a>
	<a href="#contact">Contact</a> -->
	<button id="theme-toggle" aria-label="Toggle dark mode">
	  <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
		<circle cx="12" cy="12" r="5"></circle>
		<line x1="12" y1="1" x2="12" y2="3"></line>
		<line x1="12" y1="21" x2="12" y2="23"></line>
		<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
		<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
		<line x1="1" y1="12" x2="3" y2="12"></line>
		<line x1="21" y1="12" x2="23" y2="12"></line>
		<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
		<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
	  </svg>
	  <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
		<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
	  </svg>
	</button>
  </div>
  
  <style>
	.navbar {
	  background-color: var(--navbar-bg);
	  padding: 10px 20px;
	  display: flex;
	  justify-content: flex-end;
	  align-items: center;
	  height: 60px;
	}
  
	.navbar a {
	  color: var(--text-color);
	  text-decoration: none;
	  margin-left: 20px;
	  font-weight: 500;
	}
  
	.navbar a:hover {
	  text-decoration: underline;
	}
  
	#theme-toggle {
	  background: none;
	  border: none;
	  cursor: pointer;
	  color: var(--text-color);
	  padding: 5px;
	  border-radius: 50%;
	  display: flex;
	  align-items: center;
	  justify-content: center;
	  transition: background-color 0.3s;
	}
  
	#theme-toggle:hover {
	  background-color: rgba(255, 255, 255, 0.1);
	}
  
	.sun-icon, .moon-icon {
	  transition: opacity 0.3s, transform 0.3s;
	}
	
	/* Show/hide based on current theme */
	html.light-theme .sun-icon {
	  display: none;
	}
	
	html.light-theme .moon-icon {
	  display: block;
	}
	
	html:not(.light-theme) .sun-icon {
	  display: block;
	}
	
	html:not(.light-theme) .moon-icon {
	  display: none;
	}
  </style>
  
  <script>
	// Execute after DOM is loaded
	document.addEventListener('DOMContentLoaded', () => {
	  const themeToggle = document.getElementById('theme-toggle');
	  const htmlElement = document.documentElement;
	  
	  // Check for saved theme preference or use OS preference
	  const savedTheme = localStorage.getItem('theme');
	  if (savedTheme) {
		htmlElement.classList.toggle('light-theme', savedTheme === 'light');
	  } else {
		// Check OS preference
		const prefersLight = window.matchMedia('(prefers-color-scheme: light)').matches;
		htmlElement.classList.toggle('light-theme', prefersLight);
	  }
	  
	  // Toggle theme when button is clicked
	  if (themeToggle) {
		themeToggle.addEventListener('click', () => {
		  htmlElement.classList.toggle('light-theme');
		  
		  // Save preference
		  const isLight = htmlElement.classList.contains('light-theme');
		  localStorage.setItem('theme', isLight ? 'light' : 'dark');
		});
	  }
	});
  </script>