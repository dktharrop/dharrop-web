---
// nav.astro
---

<div class="navbar">
  <div class="nav-links">
    <a href="/" class="logo-link">@</a>
    <span class="nav-divider"></span>

    <a href="/fun">fun</a>
    <a href="/contact">contact</a>
    <a href="/about">about</a>
  </div>

  <div class="nav-controls">
    <button id="theme-toggle" aria-label="Toggle dark mode">
      <svg
        class="sun-icon"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
      <svg
        class="moon-icon"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
    </button>
  </div>
</div>

<style>
  .navbar {
    background-color: var(--navbar-bg);
    padding: 10px 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    height: var(--navbar-height);
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    box-sizing: border-box;
    z-index: 1000;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .nav-links {
    display: flex;
    align-items: center;
  }

  .nav-controls {
    display: flex;
    align-items: center;
  }

  .navbar a {
    color: var(--text-color);
    text-decoration: none;
    padding: 20px;
    font-weight: 500;
  }

  .navbar a:hover {
    text-decoration: underline;
  }

  .logo-link {
    font-size: 36px;
    font-weight: bold;
    transition: transform 0.2s ease;
    position: relative;
    top: -3px;
    display: inline-block;
  }

  .logo-link:hover {
    text-decoration: none !important;
    transform: scale(1.1);
  }

  .nav-divider {
    height: 32px;
    width: 1px;
    background-color: var(--text-color);
    opacity: 0.5;
    display: inline-block;
    margin: 10px;
  }

  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--text-color);
    padding: 10px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s;
  }

  #theme-toggle:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .sun-icon,
  .moon-icon {
    transition:
      opacity 0.3s,
      transform 0.3s;
  }

  /* Show/hide based on current theme */
  html.light-theme .sun-icon {
    display: none;
  }

  html.light-theme .moon-icon {
    display: block;
  }

  html:not(.light-theme) .sun-icon {
    display: block;
  }

  html:not(.light-theme) .moon-icon {
    display: none;
  }
</style>

<script>
  // Execute after DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const htmlElement = document.documentElement;

    // Check for saved theme preference or use OS preference
    const savedTheme = localStorage.getItem("theme");
    if (savedTheme) {
      htmlElement.classList.toggle("light-theme", savedTheme === "light");
    } else {
      // Check OS preference
      const prefersLight = window.matchMedia(
        "(prefers-color-scheme: light)"
      ).matches;
      htmlElement.classList.toggle("light-theme", prefersLight);
    }

    // Toggle theme when button is clicked
    if (themeToggle) {
      themeToggle.addEventListener("click", () => {
        htmlElement.classList.toggle("light-theme");

        // Save preference
        const isLight = htmlElement.classList.contains("light-theme");
        localStorage.setItem("theme", isLight ? "light" : "dark");
      });
    }
  });
</script>
